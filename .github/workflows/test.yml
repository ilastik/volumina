name: test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-w-ilastik-env:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
        with:
          # for codecov
          fetch-depth: 5
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: ilastik-env
          auto-update-conda: true
          environment-file: .github/workflows/etc/ilastik-env.yaml
          miniforge-version: latest
          conda-solver: libmamba
          conda-remove-defaults: true
      - name: linux test
        if: matrix.os == 'ubuntu-latest'
        shell: bash -l {0}
        run: |
          pip install -e .
          xvfb-run --server-args="-screen 0 1024x768x24" pytest --cov-report=xml --cov=volumina
      - name: osx test
        if: matrix.os == 'macos-10.15'
        shell: bash -l {0}
        run: |
          pip install -e .
          pytest
      - name: windows test
        if: matrix.os == 'windows-latest'
        shell: cmd /C CALL {0}
        # auto activation of env does not seem to work on win
        run: >-
          pip install -e . && pytest
      - uses: codecov/codecov-action@v5
        if: matrix.os == 'ubuntu-latest'
        with:
          files: ./coverage.xml
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-w-conda-recipe:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python_version: ["3.8", "3.9", "3.10", "3.11"]
        exclude:
          - os: macos-latest
            python_version: "3.7"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: build-env
          environment-file: .github/workflows/etc/build-env.yaml
          auto-update-conda: true
          miniforge-version: latest
          conda-solver: libmamba
          conda-remove-defaults: true
      - name: linux conda build test
        if: matrix.os == 'ubuntu-latest'
        shell: bash -l {0}
        run: xvfb-run --server-args="-screen 0 1024x768x24" conda build --python=${{ matrix.python_version }} -c conda-forge conda-recipe
      - name: osx test
        if: startsWith(matrix.os, 'macos')
        shell: bash -l {0}
        run: conda build -c conda-forge --python=${{ matrix.python_version }} conda-recipe
      - name: windows conda-build
        if: matrix.os == 'windows-latest'
        shell: cmd /C CALL {0}
        run: conda build -c conda-forge --python=${{ matrix.python_version }} conda-recipe
